{
	"info": {
		"_postman_id": "42635197-9a3e-4ebc-99ca-4a5a98193081",
		"name": "RestfulBooker API Fake - Mock",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25383195",
		"_collection_link": "https://www.postman.com/material-technologist-75909479/workspace/atb13x/collection/25383195-42635197-9a3e-4ebc-99ca-4a5a98193081?action=share&source=collection_link&creator=25383195"
	},
	"item": [
		{
			"name": "booking/1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/booking/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				}
			]
		},
		{
			"name": "booking",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				},
				"url": {
					"raw": "{{url}}/booking",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"bookingid\": 1,\n    \"booking\": {\n        \"firstname\": \"Jim\",\n        \"lastname\": \"Brown\",\n        \"totalprice\": 111,\n        \"depositpaid\": true,\n        \"bookingdates\": {\n            \"checkin\": \"2018-01-01\",\n            \"checkout\": \"2019-01-01\"\n        },\n        \"additionalneeds\": \"Breakfast\"\n    }\n}"
				}
			]
		},
		{
			"name": "booking/1",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				},
				"url": {
					"raw": "{{url}}/booking/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"bookingid\": 1,\n    \"booking\": {\n        \"firstname\": \"Jim\",\n        \"lastname\": \"Brown\",\n        \"totalprice\": 111,\n        \"depositpaid\": true,\n        \"bookingdates\": {\n            \"checkin\": \"2018-01-01\",\n            \"checkout\": \"2019-01-01\"\n        },\n        \"additionalneeds\": \"Breakfast\"\n    }\n}"
				}
			]
		},
		{
			"name": "booking/1",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/booking/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "Deleted"
				}
			]
		},
		{
			"name": "POST Fake Mock API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check for successful response status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// Parse the response body\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Validate response structure and properties\r",
							"pm.test(\"Response has required properties\", function () {\r",
							"    pm.expect(response).to.have.all.keys('firstname', 'lastname', 'totalprice', 'depositpaid', 'bookingdates', 'additionalneeds');\r",
							"});\r",
							"\r",
							"// Validate firstname property\r",
							"pm.test(\"Firstname is a string\", function () {\r",
							"    pm.expect(response.firstname).to.exist;\r",
							"    pm.expect(response.firstname).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Validate lastname property\r",
							"pm.test(\"Lastname is a string\", function () {\r",
							"    pm.expect(response.lastname).to.exist;\r",
							"    pm.expect(response.lastname).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Validate totalprice property\r",
							"pm.test(\"Total price is a number\", function () {\r",
							"    pm.expect(response.totalprice).to.exist;\r",
							"    pm.expect(response.totalprice).to.be.a('number');\r",
							"});\r",
							"\r",
							"// Validate depositpaid property\r",
							"pm.test(\"Deposit paid is a boolean\", function () {\r",
							"    pm.expect(response.depositpaid).to.exist;\r",
							"    pm.expect(response.depositpaid).to.be.a('boolean');\r",
							"});\r",
							"\r",
							"// Validate bookingdates structure\r",
							"pm.test(\"Bookingdates is an object with checkin and checkout\", function () {\r",
							"    pm.expect(response.bookingdates).to.be.an('object');\r",
							"    pm.expect(response.bookingdates).to.have.all.keys('checkin', 'checkout');\r",
							"});\r",
							"\r",
							"// Validate checkin and checkout properties\r",
							"pm.test(\"Checkin and checkout are strings\", function () {\r",
							"    pm.expect(response.bookingdates.checkin).to.exist;\r",
							"    pm.expect(response.bookingdates.checkin).to.be.a('string');\r",
							"    pm.expect(response.bookingdates.checkout).to.exist;\r",
							"    pm.expect(response.bookingdates.checkout).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Validate additionalneeds property\r",
							"pm.test(\"Additional needs is a string\", function () {\r",
							"    pm.expect(response.additionalneeds).to.exist;\r",
							"    pm.expect(response.additionalneeds).to.be.a('string');\r",
							"});\r",
							"\r",
							"// Validate Content-Type header\r",
							"pm.test(\"Response Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Jim\",\r\n    \"lastname\": \"Brown\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking/",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://fe2e5b01-bc09-42cb-a667-4849bb8fd148.mock.pstmn.io"
		}
	]
}